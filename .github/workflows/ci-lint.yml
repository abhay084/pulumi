name: Lint

permissions:
  contents: read

on:
  workflow_call:
    inputs:
      ref:
        required: true
        description: "GitHub ref to use"
        type: string
      version-set:
        required: true
        description: "Version matrix to use"
        type: string

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GOLANGCI_LINT_VERSION: v1.64.2

jobs:
  golangci:
    name: Lint Go
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Install Mise
        run: |
          curl https://mise.run | sh
          echo "$HOME/.local/share/mise/bin" >> "$GITHUB_PATH"
          echo "$HOME/.local/share/mise/shims" >> "$GITHUB_PATH"
          mise settings experimental=true
          mise install

      - name: Mise cache
        uses: actions/cache@v4
        with:
          path: ~/.local/share/mise
          key: mise-${{ runner.os }}-${{ hashfiles('**/.mise.toml') }}

      - name: Go cache
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: go-sdk-${{ runner.os }}-${{ hashfiles('**/go.mod') }}

      - name: Run golangci-lint
        # Print GitHub Actions-friendly output so that errors get marked
        # in the pull request.
        run: make lint_golang GOLANGCI_LINT_ARGS=--out-format=colored-line-number

  tidy:
    name: go mod tidy
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Install Mise
        run: |
          curl https://mise.run | sh
          echo "$HOME/.local/share/mise/bin" >> "$GITHUB_PATH"
          echo "$HOME/.local/share/mise/shims" >> "$GITHUB_PATH"
          mise settings experimental=true
          mise install

      - name: Mise cache
        uses: actions/cache@v4
        with:
          path: ~/.local/share/mise
          key: mise-${{ runner.os }}-${{ hashfiles('**/.mise.toml') }}

      - name: Run go mod tidy
        run: make tidy
      - name: Fail if go mod not tidy
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "::error go.mod not tidy"
            echo "::error Please run 'make tidy'"
            exit 1
          fi

  gen:
    name: Generate Go SDK
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - name: Install Mise
        run: |
          curl https://mise.run | sh
          echo "$HOME/.local/share/mise/bin" >> "$GITHUB_PATH"
          echo "$HOME/.local/share/mise/shims" >> "$GITHUB_PATH"
          mise settings experimental=true
          mise install

      - name: Mise cache
        uses: actions/cache@v4
        with:
          path: ~/.local/share/mise
          key: mise-${{ runner.os }}-${{ hashfiles('**/.mise.toml') }}

      - name: Run make gen
        run: cd sdk/go && make gen
      - name: Fail if there are changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "::error Running 'make gen' in sdk/go resulted in changes"
            echo "::error Please run 'make gen' in sdk/go and commit the changes"
            exit 1
          fi

  protobuf-lint:
    name: Lint Protobufs
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - name: Check Protobufs
        run: |
          make check_proto

  sdk-lint:
    name: Lint SDKs
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - name: Install Mise
        run: |
          curl https://mise.run | sh
          echo "$HOME/.local/share/mise/bin" >> "$GITHUB_PATH"
          echo "$HOME/.local/share/mise/shims" >> "$GITHUB_PATH"
          mise settings experimental=true
          mise install
      - name: Mise cache
        uses: actions/cache@v4
        with:
          path: ~/.local/share/mise
          key: mise-${{ runner.os }}-${{ hashfiles('**/.mise.toml') }}
      - name: Set Go Dep path
        run: |
          echo "PULUMI_GO_DEP_ROOT=$(dirname "$(pwd)")" >> "$GITHUB_ENV"
      - name: Ensure
        run: make ensure
      - name: Lint Node
        run: make lint
        working-directory: sdk/nodejs
      - name: Lint Python
        run: make lint
        working-directory: sdk/python

  actionlint:
    name: Lint GHA
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - name: Install Mise
        run: |
          curl https://mise.run | sh
          echo "$HOME/.local/share/mise/bin" >> "$GITHUB_PATH"
          echo "$HOME/.local/share/mise/shims" >> "$GITHUB_PATH"
          mise settings experimental=true
          mise install
      - name: Mise cache
        uses: actions/cache@v4
        with:
          path: ~/.local/share/mise
          key: mise-${{ runner.os }}-${{ hashfiles('**/.mise.toml') }}
      - run: |
          make lint_actions
